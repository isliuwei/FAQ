#include<iostream>
#include<string.h>
#include<stdlib.h>
using namespace std;
int N;
float ZCS=0;                    
float ZHCS=0;
int a;//输入的十进制数
float b;//块长kb
int pagesize,picesize;
int weishitu[20]={1,6,9,12,13,15,16,18,20,21,22,23,24,25,26,27,33,35,37,39};
int pagetable[20][2];//页
int picetable[20];//块
int addressResolution(){
	int num[4];
	int i;
	char ch[4];
A:cout<<"请输入逻辑地址或者输入exit结束该页面置换算法: ";
	for(i=0;i<4;i++){
		cin>>ch[i];
		if(ch[i]>=48&&ch[i]<=57){
			num[i]=ch[i]-48;
		}
		else if(ch[i]>=97&&ch[i]<=102){
			num[i]=ch[i]-97+10;
		}
		else{
			if(ch[1]=='x'){
				return 00;
			}
			cout<<"error!"<<endl;
			goto A;
		}
	}
	cout<<"逻辑地址为:";
	for(i=0;i<4;i++){
		cout<<" "<<ch[i];
	}
	return num[0]*16*16*16+num[1]*16*16+num[2]*16+num[3];
}

void getPhysicaladdress(int pice){
	char ch[4];
	int i,j,k,B;
	B=(int)(b*1024);
	i=a%B+pice*B;
	for(j=3;j>=0;j--){
		k=i%16;
		i=(int)i/16;
		if(k>=0&&k<=9){
			ch[j]=k+48;
		}
		else{
			ch[j]=k-10+97;
		}
	}
	cout<<"物理地址为:";
	for(i=0;i<4;i++){
		cout<<" "<<ch[i];
	}
	cout<<endl;
}
	
void getPice(){
	int i=1;
	while(i){
		cout<<"请输入块的大小为多少KB:";
		cin>>b;
		if((int)(b*1024)%2==0){
			i=0;
		}
		else{
			cout<<"error!"<<endl;
			i=1;
		}
	}
}
void FIFO(int page){
	int i;
	if(pagetable[page][1]==0)
	{
		if(N!=0)//栈没有满
		{
			pagetable[page][0]=weishitu[picesize-N];
			getPhysicaladdress(weishitu[picesize-N]);                   //逻辑
			pagetable[page][1]=1;
			picetable[N-1]=page;
			N--;
			ZHCS++;
		}
		else//栈满了
		{
			pagetable[page][0]=pagetable[picetable[picesize-1]][0];
			pagetable[page][1]=1;
			pagetable[picetable[picesize-1]][1]=0;  
			getPhysicaladdress(pagetable[picetable[picesize-1]][0]);    //逻辑
			for(i=picesize-1;i>0;i--){	
				picetable[i]=picetable[i-1];
			}
			picetable[0]=page;
			ZHCS++;
		}
	}
	else
	{
		getPhysicaladdress(pagetable[page][0]);
	}
	cout<<" "<<"页号"<<"  "<<"块号"<<"  "<<"状态"<<"                            "<<"块表"<<endl;
	for(i=0;i<pagesize;i++){
		cout<<"   "<<i<<"    "<<pagetable[i][0]<<"     "<<pagetable[i][1];
		if(i<picesize){
			cout<<"                                "<<picetable[i]<<endl;
		}
		else
			cout<<endl;
	}
	cout<<"缺页率为："<<ZHCS/ZCS<<endl;
}
void LRU(int page){
	int temp;
	int i,j;
	if(pagetable[page][1]==0)//无相同
	{
		if(N!=0)
		{//栈没有满
			pagetable[page][0]=weishitu[picesize-N];
			getPhysicaladdress(weishitu[picesize-N]);                   //逻辑
			pagetable[page][1]=1;
			picetable[N-1]=page;
			N=N-1;
			ZHCS++;
		}
		else
		{//满了
			pagetable[page][0]=pagetable[picetable[picesize-1]][0];
			pagetable[page][1]=1;
			pagetable[picetable[picesize-1]][1]=0;  
			getPhysicaladdress(pagetable[picetable[picesize-1]][0]);    //逻辑
			for(i=picesize-1;i>0;i--){	
				picetable[i]=picetable[i-1];
			}
			picetable[0]=page;
			ZHCS++;
		}
	}
	else//有相同
	{
		getPhysicaladdress(pagetable[page][0]);
		if(N!=0)
		{
			for(i=N;i<picesize;i++)
			{
				if(page==picetable[i])
				{
					if(i==N)
					{
						break;
					}
					else{
						temp=picetable[i];
						for(j=N;j<i;j++){
							picetable[j+1]=picetable[j];//向下移
						}
						picetable[N]=temp;
					}
				}
			}


		}
		else{
			for(i=0;i<picesize;i++){
				if(page==picetable[i]){
					if(i==0){
						break;
					}
					else{
						temp=picetable[i];
						for(j=i;j>0;j--){
							picetable[j]=picetable[j-1];
						}
						picetable[0]=temp;
					}

				}
			}
		}
		
	}
	cout<<" "<<"页号"<<"  "<<"块号"<<"  "<<"状态"<<"                            "<<"块表"<<endl;
	for(i=0;i<pagesize;i++){
		cout<<"   "<<i<<"    "<<pagetable[i][0]<<"     "<<pagetable[i][1];
		if(i<picesize){
			cout<<"                                "<<picetable[i]<<endl;
		}
		else
			cout<<endl;
	}
	cout<<"缺页率为："<<ZHCS/ZCS<<endl;
}

void main(){
	int i,P;
	char str1[]="FIFO";
	char str2[]="LRU";
	char str[9];
	cout<<"请输入页表长度：";
	cin>>pagesize;
	cout<<"请输入块表长度：";
	cin>>picesize;
	N=picesize;
	cout<<"位示图为:"<<weishitu[0];
	for(i=1;i<picesize;i++){	
		cout<<" "<<weishitu[i];
	}
	cout<<endl;
	getchar();
	cout<<"请输入页面置换算法 FIFO / LRU :";
	gets(str);
	if(strcmp(str,str1)==0){
		getPice();
		while(1){
			a=addressResolution();
			P=(int)(a/(b*1024));
			if(a==00){
				break;
			}
			else{
				ZCS++;
				FIFO(P);

			}
		}
	}
	else if(strcmp(str,str2)==0){
		getPice();
		while(1){
			a=addressResolution();
			P=(int)(a/(b*1024));
			if(a==00){
				break;
			}
			else{
				ZCS++;
				LRU(P);

			}
		}
	}
}
   